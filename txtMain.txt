package textprj;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.RandomAccessFile;
import java.io.Reader;

public class Main {

	    public static void main(String[] args) {
	    	System.out.println("start");
	    	changeFile("E://textprj",2);
	    	System.out.println("end");
	    }
	    
	    /**
	     * 
	     * @param path
	     * @param changeType  1-JAVA TO TEXT  2-TEXT TO JAVA
	     */
	    public static void changeFile(String path,Integer changeType){
	    	getFileName(path,changeType);
	    }
	    
	    public static void getFileName(String path,Integer changeType) {
	         File f = new File(path);
	         if (!f.exists()) {
	             System.out.println(path + " not exists");
	             return;
	         }
	 
	         File fa[] = f.listFiles();
	         for (int i = 0; i < fa.length; i++) {
	             File fs = fa[i];
	             if (fs.isDirectory()) {
	            	 getFileName(fs.getPath(),changeType);
	             } else {
	            	 if(fs.getName().contains(".java") &&  1==changeType){  //java 转 txt
	            		 	try {
	            				String str=	readTxtFile(fs.getPath());
	            				writeTxtFile(str,fs.getPath().substring(0,fs.getPath().lastIndexOf(".")+1)+"txt");
	            				deleteFile(fs.getPath());
            				} catch (Exception e) {
            					e.printStackTrace();
            				}
	            		 	
	            	 }
	            	 
	            	 
	            	 if(fs.getName().contains(".txt") &&  2==changeType){  //java 转 txt
	            		 	try {
	            				String str=	readTxtFile(fs.getPath());
	            				writeTxtFile(str,fs.getPath().substring(0,fs.getPath().lastIndexOf(".")+1)+"java");
	            				deleteFile(fs.getPath());
         				} catch (Exception e) {
         					e.printStackTrace();
         				}
	            		 	
	            	 }
	            	 
	             }
	         }
	     }
	
	    /**
	     * 
	     * @param fileName
	     * @return
	     * @throws Exception
	     */
	    public static String readTxtFile(String path)throws Exception{ 
	    	  File fileName=new File(path);
	    	  String result=null;  
	    	  FileReader fileReader=null;  
	    	  BufferedReader bufferedReader=null;  
	    	  try{  
	    	   fileReader=new FileReader(fileName);  
	    	   bufferedReader=new BufferedReader(fileReader);  
	    	   try{  
	    	    String read=null;  
	    	    while((read=bufferedReader.readLine())!=null){ 
	    	    	if(result!=null){
	    	    		result=result+read+"\r\n"; 
	    	    	}else{
	    	    		result=read+"\r\n"; 
	    	    	}
	    	    }  
	    	   }catch(Exception e){  
	    	    e.printStackTrace();  
	    	   }  
	    	  }catch(Exception e){  
	    	   e.printStackTrace();  
	    	  }finally{  
	    	   if(bufferedReader!=null){  
	    	    bufferedReader.close();  
	    	   }  
	    	   if(fileReader!=null){  
	    	    fileReader.close();  
	    	   }  
	    	  }  
	    	  return result;  
	    	 }  
	    
	    
	    
	    public static boolean writeTxtFile(String content,String  path)throws Exception{ 
	    	  File  fileName=new File(path);
	    	  RandomAccessFile mm=null;  
	    	  boolean flag=false;  
	    	  FileOutputStream o=null;  
	    	  try {  
	    	   o = new FileOutputStream(fileName);  
	    	      o.write(content.getBytes("UTF-8"));  
	    	      o.close();  
	    	//   mm=new RandomAccessFile(fileName,"rw");  
	    	//   mm.writeBytes(content);  
	    	   flag=true;  
	    	  } catch (Exception e) {  
	    	   // TODO: handle exception  
	    	   e.printStackTrace();  
	    	  }finally{  
	    	   if(mm!=null){  
	    	    mm.close();  
	    	   }  
	    	  }  
	    	  return flag;  
	    	 }  
	    	  
	
	    
	    
	    public static boolean deleteFile(String fileName) {
	        File file = new File(fileName);
	        // 如果文件路径所对应的文件存在，并且是一个文件，则直接删除
	        if (file.exists() && file.isFile()) {
	            if (file.delete()) {
//	                System.out.println("删除单个文件" + fileName + "成功！");
	                return true;
	            } else {
//	                System.out.println("删除单个文件" + fileName + "失败！");
	                return false;
	            }
	        } else {
//	            System.out.println("删除单个文件失败：" + fileName + "不存在！");
	            return false;
	        }
	    }
	    
	    
	    
}
